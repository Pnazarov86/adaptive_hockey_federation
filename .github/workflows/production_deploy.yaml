name: Production deploy

on:
  push:
    branches:
      - feature/convert_ci-cd_to_the_prod

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: adaptive_hockey_federation
    DEPLOY_PATH: adaptive_hockey_federation

defaults:
  run:
    working-directory: .

jobs:
  code_style_pep8:
    runs-on: ubuntu-latest
    name: ruff
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: 1.5.0

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Установка зависимостей
        run: |
          poetry install

      - name: ruff
        run: |
          poetry run ruff check
  pytest:
    needs: code_style_pep8
    runs-on: ubuntu-latest
    name: pytest
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: 1.5.0

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          poetry install
      - name: pytest
        run: |
          poetry run pytest
        working-directory: adaptive_hockey_federation
  build_and_push:
    needs: [code_style_pep8, pytest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image for Production
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/prod/prod.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}